/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
/* #include <dt-bindings/zmk/mouse.h> */

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        gresc: grave_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_ESCAPE";
            bindings = <&kp ESC>, <&kp GRAVE>;
            mods = <(MOD_LGUI)>;
        };
        m_h: m_h {
            compatible = "zmk,behavior-mod-morph";
            label = "m_h";
            bindings = <&kp M>, <&kp H>;
            mods = <(MOD_LGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  F  |  P  |  B  | ------ |  J   |  L   |  U   |  Y   |  ;   | BSPC     |
            // | ESC  |  A  |  R  |  S  |  T  |  G  | ------ |  M   |  N   |  E   |  I   |  O   | ENTER    |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  | ------ |  K   |  H   |  <,  |  >.  |  ?/  | to3      |
            //               | GUI | SPC/MEH | LALT | ------ | CTRL | ALT  | to1  |
            bindings = <
            &kp TAB            &kp Q   &kp W   &kp F   &kp P   &kp B           &kp J   &kp L   &kp U       &kp Y     &kp SEMI   &kp BSPC
            &gresc            &kp A   &kp R   &kp S   &kp T   &kp G           &m_h   &kp N   &kp E       &kp I     &kp O      &kp ENTER
            &sk LSHIFT         &kp Z   &kp X   &kp C   &kp D   &kp V           &kp K   &kp H   &kp COMMA   &kp DOT   &kp FSLH   &to 2
                          &kp LGUI   &mt LC(LS(LALT)) SPC   &kp LALT           &sk LCTRL   &to 3   &to 1
        >;
        };
        layer_one {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |  %  | ------ |  ^   |  &   |  *  |  -_ |  =+  |      |
            // |      |     |  `~ |  '  |  "  |     | ------ |  ;:  |  (   |  )  |  \  |      |      |
            // |      |     |     |     |     |     | ------ |  [{  |  ]}  |  <  |  >  |  /   |  to0 |
            //                    |     |     |     | ------ |      |      | to2 |
            bindings = <
            &trans     &kp EXCL   &kp AT      &kp HASH   &kp DLLR   &kp PRCNT           &kp CARET   &kp AMPS   &kp KP_MULTIPLY   &kp MINUS   &kp EQUAL   &trans
            &trans     &trans     &kp GRAVE   &kp SQT    &kp DQT    &trans              &kp SEMI    &kp LPAR   &kp RPAR          &kp BSLH       &trans      &trans
            &trans     &trans     &trans      &trans     &trans     &trans              &kp LBKT    &kp RBKT   &kp LT            &kp GT      &kp FSLH    &to 0
                                              &trans     &trans      &trans  				    &trans      &trans     &to 2
        >;
        };
        layer_two {
            // -----------------------------------------------------------------------------------------
            // |      |      | PLAY  | PREV      |  NEXT     |    |    | ------ |  =  |  7  |  8  |  9  |  *  |          |
            // |      |      |       |  VOL-     |  VOL+     |    |    | ------ |  /  |  4  |  5  |  6  |  -  |          |
            // |      |      |       |  BRIGHT-  |  BRIGHT+  |    |    | ------ |  0  |  1  |  2  |  3  |  +  |   to0    |
            //                                         |     |    |    | ------ |     |     |     |
            bindings = <
            &trans   &trans   &kp C_PP   &kp C_PREV     &kp C_NEXT     &trans   	  	&kp EQUAL   &kp N7   &kp N8   &kp N9   &kp KP_MULTIPLY   &trans
            &trans   &trans   &trans     &kp C_VOL_DN   &kp C_VOL_UP   &trans		    	&kp FSLH    &kp N4   &kp N5   &kp N6   &kp MINUS         &trans
            &trans   &trans   &trans     &kp C_BRI_DN   &kp C_BRI_UP   &trans    			&kp N0      &kp N1   &kp N2   &kp N3   &kp PLUS          &to 0 
                                         &trans         &trans         &trans  				&trans      &trans   &trans
        >;
        };
        temp_layer {
            // -----------------------------------------------------------------------------------------
            // |      |      |       |        |       |       | ------ |     |     |     |     |     |         |
            // |      |      |       |        |       |       | ------ |     |  H  |  J  |  K  |  L  |         |
            // |      |      |       |        |       |       | ------ |     |     |     |     |     |         |
            //                                |     |    |    | ------ |     |     |     |
            bindings = <
            &trans   &trans   &trans     &trans   &trans   &trans            &trans   &trans   &trans   &trans   &trans   &trans
            &trans   &trans   &trans     &trans   &trans   &trans            &trans   &kp H   &kp J   &kp K   &kp L   &trans
            &trans   &trans   &trans     &trans   &trans   &trans            &trans   &trans   &trans   &trans   &trans   &to 0
                               &trans         &trans         &trans  				&trans      &trans   &trans
        >;
        };
    };
};

