/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
/* #include <dt-bindings/zmk/mouse.h> */

#define Base 0
#define Num 1
#define Sym 2
#define Fun 3
#define Nav 4
#define Media 5

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        mo1_to1: mo1_to1 {
            compatible = "zmk,behavior-mod-morph";
            label = "mo1_to1";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&to 1>;
            mods = <(MOD_LGUI)>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | xxx  |  Q        |  W      |  F       |  P        |  B        | ------ |  J         |  L         |  U        |  Y       |  '"        |   xxx    |
            // | xxx  |  A/Super  |  R/Alt  |  S/Ctrl  |  T/Shift  |  G        | ------ |  M         |  N/Shift   |  E/Ctrl   |  I/Alt   |  O/Super   |   xxx    |
            // | xxx  |  Z        |  X      |  C       |  D        |  V        | ------ |  K         |  H         |  .<       |  ,>      |  /?        |   xxx    |
            //                              |ESC/Media |  SPC/NAV  | TAB/HYPER | ------ | ENTER/SYM  | BSPC/NUM   |  DEL/FUN |
            bindings = <
            &none    &kp Q        &kp W        &kp F           &kp P           &kp B                       &kp J           &kp L          &kp U         &kp Y        &kp APOS     &none
            &none    &hm LGUI A   &hm LATL R   &hm LCTRL S     &hm LSHIFT T    &kp G                       &kp M           &hm RSHIFT N   &hm RCTRL E   &hm RALT I   &hm RGUI O   &none
            &none    &kp Z        &kp X        &kp C           &kp D           &kp V                       &kp K           &kp H          &kp DOT       &kp COMMA    &kp FSLH     &none
                                               &lt MEDIA ESC   &lt NAV SPACE   &mt LC(LS(LA(LGUI))) TAB    &lt SYM ENTER   &lt NUM BSPC   &lt FUN DEL
        >;
        };
        num_layer {
            // -----------------------------------------------------------------------------------------
            // | xxx  |  [{ |  7  |  8  |  9  | ]}  | ------ |     |         |        |        |         |     |
            // | xxx  |  ;: |  4  |  5  |  6  | =+  | ------ |     |  SHIFT  |  CTRL  |   ALT  |  SUPER  |     |
            // | xxx  |  `~ |  1  |  2  |  3  | \|  | ------ |     |         |        |        |         |     |
            //                    |  .> |  0) | -_  | ------ |     |         |        |
            bindings = <
            &none    &kp LBKT    &kp N7   &kp N8   &kp N9   &kp RBKT          &none   &none       &none       &none      &none     &none
            &none    &kp SEMI    &kp N4   &kp N5   &kp N6   &kp EQUAL         &none   &kp RSHIFT  &kp RCTRL   &kp RALT   &kp RGUI  &none
            &none    &kp GRAVE   &kp N1   &kp N2   &kp N3   &kp BSLH          &none   &none       &none       &none      &none     &none
                                          &kp DOT  &kp NO   &kp MINUS  				&none   &none       &none
        >;
        };
        sym_layer {
            // -----------------------------------------------------------------------------------------
            // | xxx  |  ` |  &  |  *  |  +  | (  | ------ |  )  |         |        |        |         |     |
            // | xxx  |  ~ |  $  |  %  |  ^  | [  | ------ |  ]  |  SHIFT  |  CTRL  |   ALT  |  SUPER  |     |
            // | xxx  |  | |  !  |  @  |  #  | {  | ------ |  }  |         |        |        |         |     |
            //                   |  :  |  -  | _  | ------ |     |         |        |
            bindings = <
            &none   &kp GRAVE   &kp AMPS   &kp STAR    &kp PLUS   &kp LPAR        &kp RPAR   &none       &none       &none      &none     &none
            &none   &kp TILDE   &kp DLLR   &kp PRCNT   &kp CARET  &kp LBKT        &kp RBKT   &kp RSHIFT  &kp RCTRL   &kp RALT   &kp RGUI  &none
            &none   &kp PIPE    &kp EXCL   &kp AT      &kp HASH   &kp LBRC        &kp RBRC   &none       &none       &none      &none     &none
                                           &kp COLON   &kp MINUS  &kp UNDER  	    &none   &none       &none
        >;
        };
        fun_layer {
            // -----------------------------------------------------------------------------------------
            // |        |  PTAB  | UP    | NTAB   |  BRIGHT-  |  BRIGHT+  | ------ |  =  |  7  |  8  |  9  |  *  |          |
            // |        |  LEFT  | DOWN  | RIGHT  |  VOL-     |  VOL+     | ------ |  /  |  4  |  5  |  6  |  -  |          |
            // | BT_CLR | BT1    | BT2   | BT3    |  PLAY     |  MUTE     | ------ |  0  |  1  |  2  |  3  |  +  |    ^     |
            //                                           |     |    |    | ------ |     | to0 | to0 |
            bindings = <
            &trans       &kp LC(LS(TAB))  &kp UP         &kp RC(TAB)    &kp C_BRI_DN   &kp C_BRI_UP   	    &kp EQUAL   &kp N7   &kp N8   &kp N9   &kp KP_MULTIPLY   &trans
            &trans       &kp LEFT         &kp DOWN       &kp RIGHT      &kp C_VOL_DN   &kp C_VOL_UP    	    &kp FSLH    &kp N4   &kp N5   &kp N6   &kp MINUS         &trans
            &bt BT_CLR   &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2   &kp C_PP       &kp C_MUTE           &kp N0      &kp N1   &kp N2   &kp N3   &kp PLUS          &kp CARET
                                                        &trans         &trans         &trans  				      &trans      &to 0   &to 0
        >;
        };
        nav_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  1    |  2     |  3    |  4  |  5  | ------ |  6   |  7  |  8  |  9  |  0  |         |
            // |      | PTAB  | UP     | NTAB  |     |     | ------ |  H   |  J  |  K  |  L  |     |         |
            // |      | LEFT  | DOWN   | RIGHT |     |     | ------ |  PGDN/HOME  | LCTRL(D)    | LCTRL(U)    | PGUP/END    |     |         |
            //                             |     |    |    | ------ |      |     |     |
            bindings = <
            &trans   &kp N1              &kp N2     &kp N3         &kp N4   &kp N5            &kp N6            &kp N7      &kp N8      &kp N9          &kp N0   &trans
            &trans   &kp LC(LS(TAB))     &kp UP     &kp RC(TAB)    &trans   &trans            &kp H             &kp J       &kp K       &kp L           &trans   &trans
            &trans   &kp LEFT            &kp DOWN   &kp RIGHT      &trans   &trans            &td HOME PG_DN    &kp LC(D)   &kp LC(U)   &td END PG_UP   &trans   &trans
            
                                           &trans      &trans   &trans  				  &to 0   &trans   &trans
        >;
        };
        media_layer {
            // -----------------------------------------------------------------------------------------
            // |      |  1    |  2     |  3    |  4  |  5  | ------ |  6   |  7  |  8  |  9  |  0  |         |
            // |      | PTAB  | UP     | NTAB  |     |     | ------ |  H   |  J  |  K  |  L  |     |         |
            // |      | LEFT  | DOWN   | RIGHT |     |     | ------ |  PGDN/HOME  | LCTRL(D)    | LCTRL(U)    | PGUP/END    |     |         |
            //                             |     |    |    | ------ |      |     |     |
            bindings = <
            &trans   &kp N1              &kp N2     &kp N3         &kp N4   &kp N5            &kp N6            &kp N7      &kp N8      &kp N9          &kp N0   &trans
            &trans   &kp LC(LS(TAB))     &kp UP     &kp RC(TAB)    &trans   &trans            &kp H             &kp J       &kp K       &kp L           &trans   &trans
            &trans   &kp LEFT            &kp DOWN   &kp RIGHT      &trans   &trans            &td HOME PG_DN    &kp LC(D)   &kp LC(U)   &td END PG_UP   &trans   &trans
            
                                           &trans      &trans   &trans  				  &to 0   &trans   &trans
        >;
        };
    };
};
